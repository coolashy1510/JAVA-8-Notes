Java 8 : Preparation towards Certification IZ0 808.

Duration : 2 1/5 hrs
No of Questions :70 qns
Pass percentage: 65%

- Inside JVM - Bytecode verifier ---> to check whether the byte code generated by the compiler is valid or not.
- Encapsulation --> Security
- Inheritance   --> Reusability
- Polymorphism  --> Flexibility

*** Java Features ***
Whats best about Java ? - Chance of failure in JAVA platform/language is very less.
#1 Robust -- Chance fo failure is rare.
  Why? - Type Checking while compiling checked by compiler.
#2 Garbage Collection -- To Destroy Objects - MEMORY RELATED PROBLEMS
#3 Exception Handling. (Catch block during errors)
#4 Platform Independent - Write once and run anywhere.
#5 Architecture Neutral - change in any of the hardware accesories does not have an impact on the programs.!
#6 Portability - Without performing any change to the program i can implement the same in windows, linux etc..
#7 OOP - Everything is object in Java
******************
#8  Multi threaded - 
#9  Compiled and Interpreted - 
#10 High Performance - 
#11 Distributed - 
#12 Dynamic - 

1) Java Compiler - javac filename.java ==> byte code is generated (filename.class) - byte code is platform independent ==> JVM is platform dependent
2) JDK - Java Development Kit - provides environment to develop and run java applications
	JRE - Java Runtime Environment - provides environment just to run the java applications
	 JVM - Java Virtual Machine - its an intrepretor - available inside JRE, responsible to run java program line-by-line

------------------------------------------------------------------------------------------------------------------------------    JDK <===inside=== JRE + development tools(java compiler, java debugger) <===inside=== JVM + several library classes 
------------------------------------------------------------------------------------------------------------------------------
##### Chapter 1 #####
---------------------
Data types & Literals:

 ***Data Type***

[:Signed Datatypes:] Eg: int x= +10 or float y= -12.5
Numeric:																		

Integral data types - without decimal points - default int
	byte  - 1 byte - 8 bits	= -128 to +127 / -2^7 to 2^7 -1
	short - 2 byte - 16 bits	= -2^15 to 2^15 -1
	int   - 4 byte - 32 bits	= -2^31 to 2^31 -1
	long  - 8 byte - 64 bits	= -2^63	to 2^63 -1

Floating point data types - with decimal points - default double
  floating point data types are used based on accuracy levels.
	float  - -3.4e38 to 3.4e38
	double - -1.7e308 to 1.7e308

[:Non Signed Datatypes:] boolean x = false or char y = 'a'
Non Numeric:
	char - 2 byte - 16 bits - java is unicode
	boolean - not applicable - varies from JVM to JVM

1 - negative
0 - positive

1 byte = 8 bit ===> |X|1|1|1|1|1|1|1| --> x is reserved space for 'sign' - it implies (+)ve or (-)ve
					 ...........2^1 2^0
					 -128 (-2^7) to +127(2^7 -1)

In java Garbage values are not there. JVM will provide default values for the data types.
eg: datatype = default value;
	
	int = 0;
	float = 0.0;
	boolean = false;
	String = null;
	char = ; (blank space)

ASCI Code ---> 
	A =====> 65
	a =====> 97

   	- a constant value which can be assigned to a variable


